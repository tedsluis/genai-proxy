<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="1100" viewBox="0 0 1200 1100">
  <title>genai-proxy — How it works (request flow)</title>
  <desc>Vertical request flow of genai-proxy: parse request, headers, redaction, normalization for gpt-5*, upstream via httpx, streaming passthrough, and response headers.</desc>

  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" />
    </marker>
    <style><![CDATA[
      .label { font-family: Inter, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif; fill: #111827; }
      .title { font-weight: 700; font-size: 22px; }
      .box { fill: #ffffff; stroke: #1f2937; stroke-width: 2; rx: 12; }
      .shadow { filter: drop-shadow(0 2px 6px rgba(0,0,0,0.15)); }
      .num { fill: #1f2937; }
      .numtext { font-family: Inter, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif; font-size: 16px; fill: #ffffff; font-weight: 700; }
      .step { font-size: 16px; }
      .sub { font-size: 15px; fill: #374151; }
      .mono { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }
      .arrow { stroke: #1f2937; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .muted { font-size: 13px; fill: #6b7280; }
    ]]></style>
  </defs>

  <!-- Title -->
  <text class="label title" x="600" y="42" text-anchor="middle">How it works — Request Flow</text>

  <!-- Step 1 -->
  <g class="shadow">
    <rect class="box" x="110" y="70" width="980" height="90" />
    <circle class="num" cx="150" cy="115" r="18" />
    <text class="numtext" x="150" y="121" text-anchor="middle">1</text>
    <text class="label step" x="190" y="105">Parses incoming request and body, generates/request-carries <tspan class="mono">X-Request-ID</tspan>.</text>
  </g>

  <!-- Arrow -->
  <path class="arrow" d="M 600 160 L 600 190" />

  <!-- Step 2 -->
  <g class="shadow">
    <rect class="box" x="110" y="190" width="980" height="110" />
    <circle class="num" cx="150" cy="245" r="18" />
    <text class="numtext" x="150" y="251" text-anchor="middle">2</text>
    <text class="label step" x="190" y="225">Builds forward headers, injecting the subscription header:</text>
    <text class="label sub" x="190" y="250">name=<tspan class="mono">GENAI_SUBSCRIPTION_NAME</tspan>, value=<tspan class="mono">GENAI_API_KEY</tspan>.</text>
  </g>

  <!-- Arrow -->
  <path class="arrow" d="M 600 300 L 600 330" />

  <!-- Step 3 -->
  <g class="shadow">
    <rect class="box" x="110" y="330" width="980" height="100" />
    <circle class="num" cx="150" cy="380" r="18" />
    <text class="numtext" x="150" y="386" text-anchor="middle">3</text>
    <text class="label step" x="190" y="365">Redacts sensitive headers from logs:</text>
    <text class="label sub" x="190" y="390"><tspan class="mono">authorization</tspan>, <tspan class="mono">proxy-authorization</tspan>, and the subscription header name.</text>
  </g>

  <!-- Arrow -->
  <path class="arrow" d="M 600 430 L 600 460" />

  <!-- Step 4 (Normalization) -->
  <g class="shadow">
    <rect class="box" x="110" y="460" width="980" height="210" />
    <circle class="num" cx="150" cy="515" r="18" />
    <text class="numtext" x="150" y="521" text-anchor="middle">4</text>
    <text class="label step" x="190" y="500">Normalizes <tspan class="mono">/v1/chat/completions</tspan> for <tspan class="mono">gpt-5*</tspan> models:</text>
    <text class="label sub" x="210" y="525">• Converts <tspan class="mono">max_tokens</tspan> to <tspan class="mono">max_completion_tokens</tspan>.</text>
    <text class="label sub" x="210" y="550">• Defaults <tspan class="mono">max_completion_tokens</tspan> to <tspan class="mono">128000</tspan> if <tspan class="mono">max_tokens</tspan> or <tspan class="mono">max_completion_tokens</tspan> is missing.</text>
    <text class="label sub" x="210" y="575">• Sets <tspan class="mono">temperature</tspan> to <tspan class="mono">1</tspan> (<tspan class="mono">temperature</tspan> less than 1 is not supported for gpt-5).</text>
    <text class="label sub" x="210" y="600">• Adds <tspan class="mono">Accept: text/event-stream</tspan> if <tspan class="mono">stream=true</tspan>.</text>
  </g>

  <!-- Arrow -->
  <path class="arrow" d="M 600 670 L 600 700" />

  <!-- Step 5 -->
  <g class="shadow">
    <rect class="box" x="110" y="700" width="980" height="90" />
    <circle class="num" cx="150" cy="745" r="18" />
    <text class="numtext" x="150" y="751" text-anchor="middle">5</text>
    <text class="label step" x="190" y="735">Performs the upstream request using <tspan class="mono">httpx.AsyncClient</tspan>.</text>
  </g>

  <!-- Arrow -->
  <path class="arrow" d="M 600 790 L 600 820" />

  <!-- Step 6 -->
  <g class="shadow">
    <rect class="box" x="110" y="820" width="980" height="90" />
    <circle class="num" cx="150" cy="865" r="18" />
    <text class="numtext" x="150" y="871" text-anchor="middle">6</text>
    <text class="label step" x="190" y="855">For streaming, passes bytes through while optionally logging a preview of the first N bytes.</text>
  </g>

  <!-- Arrow -->
  <path class="arrow" d="M 600 910 L 600 940" />

  <!-- Step 7 -->
  <g class="shadow">
    <rect class="box" x="110" y="940" width="980" height="90" />
    <circle class="num" cx="150" cy="985" r="18" />
    <text class="numtext" x="150" y="991" text-anchor="middle">7</text>
    <text class="label step" x="190" y="975">Returns non-stream responses with <tspan class="mono">X-Upstream-Status</tspan> and <tspan class="mono">X-Request-ID</tspan> headers.</text>
  </g>

</svg>
